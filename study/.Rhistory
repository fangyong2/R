x <- vector("charator",length=10)
x <- vector("charactor",length=10)
x <- vector(model="charactor",length=10)
x <- vector(model="charactor",length=10)
x <- vector(mode="charactor",length=10)
x <- 1:4
x1 <- c(1,2,3,4)
x2 <- c(TRUE,10,"a")
class(x)
as.numeric(x1)
as.character(x1)
as.logical(x2)
names(x1) <- c("a","b","c","d")
x1
x<-matrix(nrow=3,ncol = 2)
x
x<-c(1,2,3,4)
x
x<-matrix(nrow=3,ncol = 2)
x
x<-matrix(1:6,nrow=3,ncol = 2)
x
dim(x)
attributes(x)
y<-1:6
dim(y) <- c(2,3)
y
y2<-matrix(1:6,nrow = 2,ncol = 3)
rbind(y,y2)
cbind(y,y2)
x <-array(1:24,dim=c(4,6))
x
x1 <-array(1:24,dim=c(2,3,4))
x1
l <- list("a",2,TRUE,10,3+4i)
l
l2 <- list(a=1,b=2,c=3)
l2
l3 <- list(c(1,2,3),c(4,5,6,7))
l3
x <- matrix(1:6,nrow = 2,ncol = 3)
x
dimnames(x)<-list(c("a","b"),c("c","d","e"))
x
x <- factor(c("female","female","male","male","female"))
x
y <- factor(c("female","female","male","male","female"),levels = c("male","female"))
y
table(x)
unclass(x)
class(unclass(x))
is.na(x)
x <- c(1,NA,2,NA,3,NA)
is.na(x)
is.nan(x)
is.na(x)
is.nan(x)
df <- data.frame(id=c(1,2,3,4),name=c("a","b","c","d"),sex=c("F","M","F","F"))
df
nrow(df)
ncol(df)
df
df2
df2<-data.frame(id=c(1,2,3,4),score=c(56,78,56,23))
df2
data.matrix(df2)
x <-date()
x
class(x)
class(date())
x2 <- Sys.Date()
x2
class(x2)
x3<-as.date("2017-01-01")
x3<-as.Date("2017-01-01")
x3
class(x3)
weekdays(x3)
months(x3)
quarters(x3)
julian(x3)
x4<as.Date("2017-02-20")
x4<as.Date("2017-02-20")
#日期与时间
x4<as.Date("2017-02-20")
x4<-as.Date("2017-02-20")
x3 <- as.Date("2013-03-18")
x4-x3
as.numeric(x4-x3)
x <- Sys.time()
x
class(x)
p<-as.POSIXlt(x)
p
class(p)
names(unclass(p))
p$min
p$year
as.POSIXct(p)
strptime("x1","%B %d, %Y %H:%M")
strptime(x1,"%B %d, %Y %H:%M")
x1 <- "Jan 1,2015 01:01"
strptime(x1,"%B %d, %Y %H:%M")
str(lapply())
str(lapply
str(lapply)
str(lapply)
x <- list(a=1:10,b=c(11,21,31,41,51))
x
lapply(x,mean)
x <-1:4
lapple(x,runif)
lapply(x,runif)
lapply(x,runif,min=0,max=10)
x <- list(a=matrix(1:6,2,3),b=matrix(4:7,2,2))
x <- list(a=matrix(1:6,2,3),b=matrix(4:7,2,2))
lapply(x,function(m) m[1,])
x
lapple(x,mean)
lapply(x,mean)
sapply(x,mean)
class(sapply(x,mean))
x<-matrix(1:16,4,4)
apply(x,2,mean)
x
apply(x,2,sum)
rowSums(x)
rowMeans(x)
colMeans(x)
colSums(x)
x<-matrix(rnorm(100),10,10)
apply(x,1,quantile,probs=c(0.25,0.75))
x<-array(rnorm(2*3*4),c(2*3*4))
x
apply(x,c(1,2),mean)
x <- array(rnorm(2*3*4),c(2,3,4))
x
apply(x,c(1,2),mean)
apply(x,c(1,3),mean)
list(rep(1,4),rep(2,3),rep(3,2),rep(4,1))
mapply(rep,1:4,4:1)
s()
s(4,0,1)
s(4,0,1)
s(4,0,1)
s <- function(n,mean,std){
rnorm(n,mean,std)
}
s(4,0,1)
mapply(s,1:5,5:1,2)
x<-c(rnorm(5),runif(5),rnorm(5,1))
x
list(rep(1,4),rep(2,3),rep(3,2),rep(4,1))
x
f <- gl(3,5)
f
tapply(x,f,mean)
tapply(x,f,mean,simplify = FALSE)
split(x,f)
lapply(split(x,f),mean)
head(airquality)
s <- split(airquality,airquality$month)
s
s <- split(airquality,airquality$month)
s <- split(airquality,airquality$Month)
s
table(airquality$Month)
lapply(s,function(x) colMeans(x[,c("OZone","Wind","Temp")]))
lapply(s,function(x) colMeans(x[,c("Ozone","Wind","Temp")]))
sapply(s,function(x) colMeans(x[,c("Ozone","Wind","Temp")],na.rm = TRUE))
sapply(s,function(x) colMeans(x[,c("Ozone","Wind","Temp")]))
x <- data.frame(v1=1:5,v2=c(10,7,9,6,8),v3=11:15,v4=c(1,1,2,2,1))
x
sot(x)
sort(x)
sort(x,x$v2)
sort(x$v2)
sort(x$v2,decreasing = TRUE)
order(x$v2)
x[order(x$v2),]
x[order(x$v4,x$v2),]
head(airquality)
head(airquality,10)
tail(airquality)
summary(airquality)
str(airquality)
table(airquality$Month)
table(airquality$Ozone)
table(airquality$Ozone,useNA = "ifany")
table(airquality$Ozone,airquality$Day)
any(is.na(airquality$Ozone))
sum(is.na(airquality$Ozone))
all(airquality$Month<12)
Titanic <-as.data.frame(Titanic)
Titanic
head(Titanic)
xtabs(Freq~Class + Age,data=Titanic)
x <- xtabs(Freq~Class + Age,data=Titanic)
ftable(x)
object.size(airquality)
print(object.size(airquality),units = "Kb")
setwd('E:/R-code/R/study')
getwd()
library(RMysql)
install.packages("RMySQL")
library(RMySQL)
mysqlconnection = dbConnect(MySQL(),user='root',password='',dbname='wiki',host='localhost')
dbListTables(mysqlconnection)
data.frame = fetch(result,n=5)
result = dbSendQuery(mysqlconnection,"select * from urls")
data.frame = fetch(result,n=5)
print(data.frame)
result = dbSendQuery(mysqlconnection,"select * from urls where id = 7")
result = dbSendQuery(mysqlconnection,"select * from urls where urlname = 'js常用技巧总结（1）'")
result = dbSendQuery(mysqlconnection,"select * from urls where urlname='js常用技巧总结(1)'")
mysqlconnection.close()
result = null
result = Null
result = NULL
result = dbSendQuery(mysqlconnection,"select * from urls where urlname='js常用技巧总结(1)'")
x <- c(21,62,10,53)
labels <- c('London','New York','Singapore','Mumbai')
png(file='city.png')
pie(x,labels)
dev.off()
pie(x,labels,main="City pie chart",col=rainbow(length(x)))
dev.off()
x <- c(21,62,10,53)
labels <- c('London','New York','Singapore','Mumbai')
png(file='city.png')
pie(x,labels,main="City pie chart",col=rainbow(length(x)))
dev.off()
pie(x,labels = piepercent,main="City pie chart",col=rainbow(length(x)))
piepercent <- round(100*x/sum(x),1)
pie(x,labels = piepercent,main="City pie chart",col=rainbow(length(x)))
legend("topright",labels,cex=0.8,fill=rainbow(length(x)))
png(file="city_3d.png")
pie3D(x,labels,explode=0.1,main="pie chart of countries")
H <- c(7,12,28,3,41)
barplot(H)
barplot(H)
png(file="barchart.png")
barplot(H)
dev.off()
M <- c('Mar','Apr','May','Jun','Jul')
barplot(H,names.arg = M,xlab="Month",ylab="Revenue",col="blue",main="Revenue chart",border = "red")
png(file="barchart1.png")
barplot(H,names.arg = M,xlab="Month",ylab="Revenue",col="blue",main="Revenue chart",border = "red")
dev.off()
colors <- c('green','orange','brown')
months <- c('Mar','Apr','May','Jun','Jul')
regions <- c('East','West','North')
Values <- matrix(c(2,9,3,11,9,4,8,7,3,12,5,2,8,10,11),nrow = 3,ncol=5,byrow = TRUE)
png(file="barchat2.png")
barplot(Values,main="total revenue",names.arg = months,xlab="month",ylab = "revenue",col=colors)
legend("topleft",regions,cex=1.3,fill=colors)
dev.off()
#boxplot
#boxplot(x,data,notch,varwidth,names,main)
input <- mtcars[,c('mpg','cyl')]
input <- mtcars[,c('mpg','cyl')]
print(head(input))
boxplot(mpg~cyl,data=mtcars,xlab="Number of Cylinders",ylab="Miles Per Gallon",main="Mileage Data")
png(file = "boxplot.png")
boxplot(mpg~cyl,data=mtcars,xlab="Number of Cylinders",ylab="Miles Per Gallon",main="Mileage Data")
dev.off()
png(file="boxplot1.png")
boxplot(mpg~cyl,data=mtcars,xlab="Number of Cylinders",ylab="Miles Per Gallon",main="Mileage Data",notch=TRUE,varwidth=TRUE,col=c("green","yellow","purple"),names=c("High","Medium","Low"))
dev.off()
v <- c(9,13,21,8,36,22,12,41,31,33,19)
png(file="hist.png")
hist(v,xlab="Weight",col="yellow",border="blue")
dev.off()
hist(v,xlab = "Weight",col="green",border = "red",border="red",xlim=c(0,40), ylim=c(0,5),breaks=5)
dev.off()
png(file = "hist1.png")
hist(v,xlab = "Weight",col="green",border = "red",border="red",xlim=c(0,40), ylim=c(0,5),breaks=5)
dev.off()
png(file = "hist1.png")
hist(v,xlab = "Weight",col="green",border = "red",border="red",xlim=c(0,40), ylim=c(0,5),breaks=5)
dev.off()
v <- c(9,13,21,8,36,22,12,41,31,33,19)
png(file = "hist1.png")
hist(v,xlab = "Weight",col="green",border = "red",border="red",xlim=c(0,40), ylim=c(0,5),breaks=5)
dev.off()
png(file = "hist1.png")
hist(v,xlab = "Weight",col="green",border = "red",xlim=c(0,40), ylim=c(0,5),breaks=5)
dev.off()
v <- c(7,12,28,3,41)
png(file="line_chart.png")
plot(v,type="o")
dev.off()
png(file="line_chart1.png")
plot(v,type="o",col="red",xlab = "Month",ylab="Rain fall",main="Rain fall chart")
dev.off()
t <- c(14,7,6,19,3)
png(file="line_chart2.png")
plot(v,type="o",col="red",xlab = "Month",ylab="Rain fall",main="Rain fall chart")
lines(t,type="o",col="blue")
dev.off()
input <- mtcars[,c('wt','mpg')]
input
png(file="scatterplot.png")
plot(x=input$wt,yinput$mpg,
xlab = "Weight",
ylab = "Milage",
xlim = c(2.5,5),
ylim = c(15,30),
main = "Weight vs Milage"
)
plot(x=input$wt,y=input$mpg,
xlab = "Weight",
ylab = "Milage",
xlim = c(2.5,5),
ylim = c(15,30),
main = "Weight vs Milage"
)
dev.off()
pairs(~wt+mpg+disp+cyl,data=mtcars,main="Scatterplot Matrix")
dev.off()
png(file="scatterplot1.png")
pairs(~wt+mpg+disp+cyl,data=mtcars,main="Scatterplot Matrix")
dev.off()
