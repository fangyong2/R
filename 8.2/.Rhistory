#回归诊断
states <- as.data.frame(state.x77[,c("Murder","Population","Illiteracy","Income","Frost")])
fit <- lm(Murder~Population+Illiteracy+Income+Frost,data=states)
confit(fit)
confint(fit)
fit <- lm(weight~height,data=women)
par(mfrow=c(2,2))
plot(fit)
fit2 <- lm(weight~height+I(height^2),data=women)
par(mfrow=c(2,2))
plot(fit2)
fit <- lm(Murder~Population+Illiteracy+Income+Frost,data=states)
par(mfrow=c(2,2))
plot(fit)
#改进方法
#正态性
library(car)
fit <- lm(Murder~Population+Illiteracy+Income+Frost,data=states)
qqPlot(fit,labels=row.names(states),id.methos="identify",simulate=TRUE,main="Q-Q Plot")
states["Nevada"]
states["Nevada",]
fitted(fit)["Nevada"]
residuals(fit)["Nevada"]
rstudent(fit)["Nevada"]
#绘制学生化残差图的函数
residplot <- function(fit,nbreaks=10){
z <- rstudent(fit)
hist(z,breaks=nbreaks,freq=FALSE,xlab="Studentized Residual",main="Distribution of Errors")
rug(jitter(z),col="brown")
curve(dnorm(x,mean=mean(z),sd=sd(z)),add=TRUE,col="blue",lwd=2)
lines(density(z)$x,density(z)$y,col="red",lwd=2,lty=2)
legend("topright",legend=c("Normal Curve","Kernel Density Curve"),lty=1:2,col=c("blue","red"),cex=.7)
}
residplot(fit)
#误差的独立性
durbinWatsonTest(fit)
#线性
crPlots(fit)
#检验同方差性
ncvTest(fit)
spreadLevelPlot(fit)
#线性模型假设的综合检验
library(gvlma)
install.packages("gvlma")
library(gvlma)
gvmodel <- gvlma(fit)
summary(gvmodel)
#检测多重共线性
vif(fit)
sqrt(vif(fit)) > 2 # problem?
save.image()
savehistory()
q()
