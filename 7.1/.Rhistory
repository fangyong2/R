#描述性统计
vars <- c("mpg","hp","wt")
head(mtcars[vars])
#通过summary()计算描述性统计量
summary(mtcars[vars])
#通过sapply()计算描述性统计量
mystats <- function(x,na.omit=FALSE){
if(na.omit){x<-x[!is.na(x)]}
m<-mean(x)
n<length(x)
n<-length(x)
s<-sd(x) 
skew<-sum((x-m)^3/s^3)/n
kurt<-sum((x-m)^4/x^4)/n - 3
return(c(n=n,mean=m,stdev=s,skew=skew,kurtosis=kurt))
}
sapply(mtcars[vars],mystats)
history()
#通过Hmisc包中的describe()函数计算描述性统计量
library(Hmisc)
describe(mtcars[vars])
#通过pastecs包中的stat.desc()函数计算描述性统计量
libreay(pastecs)
library(pastecs)
install.packages("pastecs")
library(pastecs)
stat.desc(mtcars[vars])
#通过psyc包中的describe()计算描述性统计量
library(psych)
install.packages("psych")
library(psych)
describe(mtcars[vars])
save.image()
savehistory()
#分组计算描述性统计量
#使用aggregate()分组获取描述性统计量
aggregate(mtcars[vars],by=list(am=mtcars$am,mean))
aggregate(mtcars[vars],by=list(am=mtcars$am),mean))
aggregate(mtcars[vars],by=list(am=mtcars$am),mean)
aggregate(mtcars[vars],by=list(am=mtcars$am),sd)
#使用by()分组计算描述性统计量
dstats <- function(x){c(mean=mean(x),sd=sd(x))}
by(mtcars[vars],mtcars$am,dstats)
mtcars$am:0
dstats <- function(x)(c(mean=mean(x),sd=sd(x)))
by(mtcars[vars],mtcars$am,dstats)
#使用doBy包中的summaryBy()分组计算概述统计量
library(doBy)
install.packages("doBy")
library(doBy)
summaryBy(mpg+hp+wt~am,data=mtcars,FUN=mystats)
summaryBy(mpg+hp+wt~am,data=mtcars)
#使用psych包中的describe.by()分组计算概述统计量
describe.by(mtcars[vars],mtcars$am)
#使用reshape包分组计算概述统计量
library(reshape)
dstats <- function(x)(c(n=length(x),mean=mean(x),sd=sd(x)))
dfm<-melt(mtcars,measure.vars=c("mpg","hp","wt"),id.vars=c("am","cyl"))
cast(dfm,am+cyl+variable~.,dstats)
save.image()
savehistory()
q()
