load("E:\\R-code\\R\\7.3\\.RData")
history()
load("F:\\r\\04\\.RData")
attach(mtcars)
plot(wt,mpg)
abline(mpg~wt)
abline(lm(mpg~wt))
title("Regression of MPG on Weight")
detach(mtcars)
pdf("mygraph.pdf")
attach(mtcars)
plot(wt,mpg)
abline(lm(mpg~wt))
title("Regression of MPG on Weight")
detach(mtcars)
dev.off()
attach(mtcars)
plot(wt,mpg)
hist(wt,mpg)
dose <- c(20,30,40,45,60)
drugA <- c(16,20,27,40,60)
drugB <- c(15,18,25,31,40)
plot(dose,drugA,type="b")
help(plot)
plot(dose,drugA,type="p")
plot(dose,drugA,type="l")
plot(dose,drugA,type="c")
plot(dose,drugA,type="o")
plot(dose,drugA,type="h")
plot(dose,drugA,type="s")
plot(dose,drugA,type="S")
plot(dose,drugA,type="n")
plot(dose,drugA,type="b")
opar <- par(no.readonly=TRUE)
par(lty=2,pch=17)
plot(dose,drugA,type="b")
par(opar)
help(par)
plot(dose,drugA,type="b",lty=3,lwd=3,pch=15,cex=2)
plot(dose,drugA,type="b",lty=3,lwd=3,pch=22,cex=2)
plot(dose,drugA,type="b",lty=3,lwd=3,pch=6,cex=2)
plot(dose,drugA,type="b",lty=3,lwd=3,pch=11,cex=2)
plot(dose,drugA,type="b",lty=3,lwd=3,pch=11,cex=2,col="red")
color <-c("red","aqua","blue")
plot(dose,drugA,type="b",lty=3,lwd=3,pch=11,cex=2,col=color)
color <-c("red","black","blue")
plot(dose,drugA,type="b",lty=3,lwd=3,pch=11,cex=2,col=color)
plot(dose,drugA,type="b",lty=3,lwd=3,pch=11,cex=2,col=color,col.axis="green")
plot(dose,drugA,type="b",lty=3,lwd=3,pch=11,cex=2,col=color,col.axis="green",col.lab="yellow")
plot(dose,drugA,type="b",lty=3,lwd=3,pch=11,cex=2,col=color,col.axis="green",col.lab="yellow",col.main="red")
title("demo title")
plot(dose,drugA,type="b",lty=3,lwd=3,pch=11,cex=2,col=color,col.axis="green",col.lab="yellow",col.main="red",fg="grey")
plot(dose,drugA,type="b",lty=3,lwd=3,pch=11,cex=2,col=color,col.axis="green",col.lab="yellow",col.main="red",bg="black")
q()
#频数表和列联表
head(mtcars)
#生成频数表
#一维列联表
mytable <- with(mtcars,table(mpg))
mytable
prop.table(mytable)
prop.table(mytable)*100
#二维列联表
mytable <- xtabs(~mpg+Mazda RX4,data=mtcars)
mytable <- xtabs(~mpg+hp,data=mtcars)
mytable
margin.table(mytable,1)
prop.table(mytable,1)
margin.table(mytable,2)
prop.table(mytable,2)
prop.table(mytable)
addmargins(mytable)
addmargins(prop.table(mytable,2),1)
addmargins(prop.table(mytable,1),2)
save.image()
savehistory()
#使用CrossTable生成二维列联表
library(gmodels)
install.packages("gmodels")
install.packages("gmodels")
library(gmodels)
CrossTable(mtcars$mpg,mtcars$cyl)
mtcars
mytable <- xtabs(~mpg+cyl+disp,data=mtcars)
mytable
margin.table(mytable,1)
margin.table(mytable,2)
margin.table(mytable,3)
margin.table(mytable,c(1,3))
ftable(prop.table(mytable,c(1,2)))
ftable(prop.table(mytable,c(1,2),3))
ftable(prop.table(mytable,c(1,2),3))
save.image()
savehistory()
q()
history()
#使用CrossTable生成二维列联表
library(gmodels)
install.packages("gmodels")
mtcars
CrossTable(mtcars$mpg,mtcars$cly)
library(gmodels)
CrossTable(mtcars$mpg,mtcars$cly)
CrossTable(mtcars$mpg,mtcars$disp)
#独立性实验
卡方独立性检验
#卡方独立性检验
mytable<-xtabs(~mpg+cyl,data=mtcars)
chisp.test(mytable)
fisher.test(mytable)
chisp.test(mytable)
#Cochran-Mantel-Haenszel检验
mantelhaen.test(mytable)
mytable<-xtabs(~mpg+disp,data=mtcars)
mantelhaen.test(mytable)
mytable<-xtabs(~mpg+cyl+disp,data=mtcars)
mantelhaen.test(mytable)
mtcars
mytable<-xtabs(~disp+hp+drat,data=mtcars)
mantelhaen.test(mytable)
#通过table2flat将表转换为扁平格式
#相关的类型
#Pearson、Spearman和Kendall相关
states <- state.x77[,1:6]
cov(states)
cor(states)
cor(states,method="spearman")
x <- states[,c("Population","Income","Illiteracy","HS Grad")]
y <- states[,c("Life Exp","Murder")]
cor(x,y)
#偏相关
library(ggm)
install.packages("ggm")
library(ggm)
pcor(c(1,5,2,3,6),cov(states))
#检验某种相关系数的显著性
cor.test(states[,3],states[,5])
#通过corr.test计算相关矩阵并进行显著性检验
library(psych)
corr.test(states,use="complete")
pcor.test(states,use="complete")
#独立样本的t检验
library(MASS)
t.test(Prob ~ So,data=UScrime)
#非独立样本的t检验
sapply(USCrime[c("U1","U2")],function(x){c(mean=mean(x),sd=sd(x))})
sapply(UScrime[c("U1","U2")],function(x){c(mean=mean(x),sd=sd(x))})
with(UScrime,t.test(U1,U2,paired=TRUE))
#组件差异的非参数检验
#两组的比较
with(UScrime,by(Prob,So,median))
wilcox.test(Prob~So,data=UScrime)
sapply(UScrime[c("U1","U2"),median])
sapply(UScrime[c("U1","U2")].median)
sapply(UScrime[c("U1","U2")],median)
with(UScrime,wilcox.test(U1,U2,paired=TRUE))
#多于两组的比较
states <- as.data.frame(cbind(state.region,state.x77))
kruskal.test(Illiteracy~state.region,data=states)
#非参数多组比较
class <-state.region
var <- state.x77[,c("Illiteracy")]
mydata <- as.data.frame(cbind(class,var))
rm(class,var)
library(npmc)
install.packages("npmc")
save.image()
savehistory()
