getwd()
#控制流
#for循环
for (i in 1:10) print("Hello R" + i)
for (i in 1:10) print("Hello R")
for (i in 1:10) print("Hello R" $ i)
#while循环
i <- 10
while(i>10) {print("hello"); i--}
while(i>10) {print("hello"); i<-i-1}
while(i>0) {print("hello"); i<-i-1}
#if-else 和 ifelse
#switch
feelings <- c("sad","afraid")
for(i in feelings)
print{}
for(i in feelings)
print(
switch(i,
happy = "I am glad you are happy",
afraid = "There is nothing to fear",
sad = "Cheer up",
angry = "Calm down now"
)
)
#用户自编函数
mystats <- function(x,parametric=TRUE,print=FALSE){}
mystats <- function(x,parametric=TRUE,print=FALSE){
if(parametric){
center<-mean(x);spread<-sd(x)
}else{
center<-median(x);spread<-mad(x)
}
if(print & parametric){
cat("Mean=",center,"\n","SD=",spread,"\n")
}else{
cat("Median=",center,"\n","MAD=",spread,"\n")
}
result<-list(center=center,spread=spread)
return(result)
}
set.seed(1234)
x<-rnorm(500)
y<-mystats(x)
mydate <- function(type="long"){
switch(type,
long = format(Sys.time(),"%A %B %d %Y"),
short = format(Sys.time(),"%m-%d-%y"),
cat(type,"is not a recognized type\n")
)
}
mydate("long")
mydate("short")
mydate()
mydate('ui')
#整合与重构
cars <- mtcar[1:5,1:4]
cars <- mtcars[1:5,1:4]
cars
t(car)
t(cars)
#整合数据
options(digits=3)
attach(mtcars)
aggdata<-aggdata(mtcars,by=list(cyl,gear),FUN=mean,na.rm=TRUE)
aggdata<-aggregate(mtcars,by=list(cyl,gear),FUN=mean,na.rm=TRUE)
aggdata
#reshape
library(reshape)
save.image()
savehistory()
q()
