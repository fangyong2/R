x <- vector("charator",length=10)
x <- vector("charactor",length=10)
x <- vector(model="charactor",length=10)
x <- vector(model="charactor",length=10)
x <- vector(mode="charactor",length=10)
x <- 1:4
x1 <- c(1,2,3,4)
x2 <- c(TRUE,10,"a")
class(x)
as.numeric(x1)
as.character(x1)
as.logical(x2)
names(x1) <- c("a","b","c","d")
x1
x<-matrix(nrow=3,ncol = 2)
x
x<-c(1,2,3,4)
x
x<-matrix(nrow=3,ncol = 2)
x
x<-matrix(1:6,nrow=3,ncol = 2)
x
dim(x)
attributes(x)
y<-1:6
dim(y) <- c(2,3)
y
y2<-matrix(1:6,nrow = 2,ncol = 3)
rbind(y,y2)
cbind(y,y2)
x <-array(1:24,dim=c(4,6))
x
x1 <-array(1:24,dim=c(2,3,4))
x1
l <- list("a",2,TRUE,10,3+4i)
l
l2 <- list(a=1,b=2,c=3)
l2
l3 <- list(c(1,2,3),c(4,5,6,7))
l3
x <- matrix(1:6,nrow = 2,ncol = 3)
x
dimnames(x)<-list(c("a","b"),c("c","d","e"))
x
x <- factor(c("female","female","male","male","female"))
x
y <- factor(c("female","female","male","male","female"),levels = c("male","female"))
y
table(x)
unclass(x)
class(unclass(x))
is.na(x)
x <- c(1,NA,2,NA,3,NA)
is.na(x)
is.nan(x)
is.na(x)
is.nan(x)
df <- data.frame(id=c(1,2,3,4),name=c("a","b","c","d"),sex=c("F","M","F","F"))
df
nrow(df)
ncol(df)
df
df2
df2<-data.frame(id=c(1,2,3,4),score=c(56,78,56,23))
df2
data.matrix(df2)
x <-date()
x
class(x)
class(date())
x2 <- Sys.Date()
x2
class(x2)
x3<-as.date("2017-01-01")
x3<-as.Date("2017-01-01")
x3
class(x3)
weekdays(x3)
months(x3)
quarters(x3)
julian(x3)
x4<as.Date("2017-02-20")
x4<as.Date("2017-02-20")
#日期与时间
x4<as.Date("2017-02-20")
x4<-as.Date("2017-02-20")
x3 <- as.Date("2013-03-18")
x4-x3
as.numeric(x4-x3)
x <- Sys.time()
x
class(x)
p<-as.POSIXlt(x)
p
class(p)
names(unclass(p))
p$min
p$year
as.POSIXct(p)
strptime("x1","%B %d, %Y %H:%M")
strptime(x1,"%B %d, %Y %H:%M")
x1 <- "Jan 1,2015 01:01"
strptime(x1,"%B %d, %Y %H:%M")
str(lapply())
str(lapply
str(lapply)
str(lapply)
x <- list(a=1:10,b=c(11,21,31,41,51))
x
lapply(x,mean)
x <-1:4
lapple(x,runif)
lapply(x,runif)
lapply(x,runif,min=0,max=10)
x <- list(a=matrix(1:6,2,3),b=matrix(4:7,2,2))
x <- list(a=matrix(1:6,2,3),b=matrix(4:7,2,2))
lapply(x,function(m) m[1,])
x
lapple(x,mean)
lapply(x,mean)
sapply(x,mean)
class(sapply(x,mean))
x<-matrix(1:16,4,4)
apply(x,2,mean)
x
apply(x,2,sum)
rowSums(x)
rowMeans(x)
colMeans(x)
colSums(x)
x<-matrix(rnorm(100),10,10)
apply(x,1,quantile,probs=c(0.25,0.75))
x<-array(rnorm(2*3*4),c(2*3*4))
x
apply(x,c(1,2),mean)
x <- array(rnorm(2*3*4),c(2,3,4))
x
apply(x,c(1,2),mean)
apply(x,c(1,3),mean)
list(rep(1,4),rep(2,3),rep(3,2),rep(4,1))
mapply(rep,1:4,4:1)
s()
s(4,0,1)
s(4,0,1)
s(4,0,1)
s <- function(n,mean,std){
rnorm(n,mean,std)
}
s(4,0,1)
mapply(s,1:5,5:1,2)
x<-c(rnorm(5),runif(5),rnorm(5,1))
x
list(rep(1,4),rep(2,3),rep(3,2),rep(4,1))
x
f <- gl(3,5)
f
tapply(x,f,mean)
tapply(x,f,mean,simplify = FALSE)
split(x,f)
lapply(split(x,f),mean)
head(airquality)
s <- split(airquality,airquality$month)
s
s <- split(airquality,airquality$month)
s <- split(airquality,airquality$Month)
s
table(airquality$Month)
lapply(s,function(x) colMeans(x[,c("OZone","Wind","Temp")]))
lapply(s,function(x) colMeans(x[,c("Ozone","Wind","Temp")]))
sapply(s,function(x) colMeans(x[,c("Ozone","Wind","Temp")],na.rm = TRUE))
sapply(s,function(x) colMeans(x[,c("Ozone","Wind","Temp")]))
x <- data.frame(v1=1:5,v2=c(10,7,9,6,8),v3=11:15,v4=c(1,1,2,2,1))
x
sot(x)
sort(x)
sort(x,x$v2)
sort(x$v2)
sort(x$v2,decreasing = TRUE)
order(x$v2)
x[order(x$v2),]
x[order(x$v4,x$v2),]
head(airquality)
head(airquality,10)
tail(airquality)
summary(airquality)
str(airquality)
table(airquality$Month)
table(airquality$Ozone)
table(airquality$Ozone,useNA = "ifany")
table(airquality$Ozone,airquality$Day)
any(is.na(airquality$Ozone))
sum(is.na(airquality$Ozone))
all(airquality$Month<12)
Titanic <-as.data.frame(Titanic)
Titanic
head(Titanic)
xtabs(Freq~Class + Age,data=Titanic)
x <- xtabs(Freq~Class + Age,data=Titanic)
ftable(x)
object.size(airquality)
print(object.size(airquality),units = "Kb")
qpot(Wind,Temp,data=airquality,geom=c("point","smooth"),color=Month)
qplot(Wind,Temp,data=airquality,geom=c("point","smooth"),color=Month)
library(ggplot2)
qplot(Wind,Temp,data=airquality,geom=c("point","smooth"),color=Month)
qplot(Wind,Temp,data=airquality,facets = Month ~.
qplot(Wind,Temp,data=airquality,facets = Month ~.)
qplot(Wind,Temp,data=airquality,facets = Month ~.)
qplot(Wind,Temp,data=airquality,facets = .~Month)
qplot(Wind,data=airquality)
qplot(Wind,data=airquality,facets = Month ~.)
qplot(y = Wind,data=airquality)
qplot(Wind,data=airquality,fill=Month)
qplot(Wind,data=airquality,geom="density")
qplot(Wind,data=airquality,geom="density",color=Month)
qplot(Wind,data=airquality,geom="dotplot")
library(ggplot2)
ggplot(airquality,aes(Wind,Temp)) +
geom_point()
ggplot(airquality,aes(Wind,Temp)) +
geom_point(color="steelblue",alpha=0.4,size=5)
ggplot(airquality,aes(Wind,Temp)) +
geom_point(aes(color=factor(Month)),alpha=0.4,size=5)
ggplot(airquality,aes(Wind,Temp)) +
geom_point() +
geom_smooth()
ggplot(airquality,aes(Wind,Temp)) +
geom_point() +
stat_smooth()
ggplot(airquality,aes(Wind,Temp)) +
stat_smooth()
ggplot(airquality,aes(Wind,Temp)) +
stat_smooth(method="lm",se=FALSE)
ggplot(airquality,aes(Wind,Temp)) +
stat_smooth(method="lm",se=FALSE,aes(color=Month))
ggplot(airquality,aes(Wind,Temp)) +
stat_smooth(method="lm",se=FALSE,aes(color=factor(Month)))
ggplot(airquality,aes(Wind,Temp,col=factor(Month),grop=1)) +
stat_smooth(method="lm",se=FALSE)
ggplot(airquality,aes(Wind,Temp,col=factor(Month),grop=1)) +
geom_point() +
stat_smooth(method="lm",se=FALSE)
library(RColorBrewer)
mycolors <- c(brewer.pal(5,"Dark2"),"black")
display.brewer.pal(5,"Dark2")
ggplot(airquality,aes(Wind,Temp,col=factor(Month),grop=1)) +
geom_point() +
stat_smooth(method="lm",se=FALSE) +
scale_color_manual("Month",values=mycolors)
ggplot(airquality,aes(Wind,Temp,col=factor(Month),grop=1)) +
geom_point() +
stat_smooth(method="lm",se=FALSE) +
scale_color_manual("Month",values=mycolors) +
facet_grid(.~MOnth)
ggplot(airquality,aes(Wind,Temp,col=factor(Month),grop=1)) +
geom_point() +
stat_smooth(method="lm",se=FALSE) +
scale_color_manual("Month",values=mycolors) +
facet_grid(.~MOnth)
ggplot(airquality,aes(Wind,Temp,col=factor(Month))) +
geom_point() +
stat_smooth(method="lm",se=FALSE) +
scale_color_manual("Month",values=mycolors) +
facet_grid(.~MOnth)
ggplot(airquality,aes(Wind,Temp,col=factor(Month))) +
geom_point() +
stat_smooth(method="lm",se=FALSE) +
scale_color_manual("Month",values=mycolors) +
facet_grid(.~MOnth)
ggplot(airquality,aes(Wind,Temp,col=factor(Month))) +
geom_point() +
stat_smooth(method="lm",se=FALSE) +
scale_color_manual("Month",values=mycolors) +
facet_grid(.~MOnth)
ggplot(airquality,aes(Wind,Temp,col=factor(Month),grop=1)) +
geom_point() +
stat_smooth(method="lm",se=FALSE) +
scale_color_manual("Month",values=mycolors) +
theme_classic()
?theme
pal <- colorRamp(c("red","blue"))
pal(0) #red
pal(1) #blue
pal(0.5)
pal(seq(0,1,len=10))
pal <-colorRampPalette(c("red","yellow"))
pal(1)
pal(2)
pal(10)
library(RColorBrewer)
brewer.pal.info
cols <- brewer.pal(3,"Greens")
pal <- colorRampPalette(cols)
image(volcano,col=pal(20))
display.brewer.pal(3,"Greens")
pdf(file="myfig.pdf")
with(airquality,plot(Wind,Temp,main="Wind and Temp in NYC"))
dev.off()
getwd()
setwd("E:/R-code/R/9.6")
dev.copy(png,file="mycopy.png")
dev.off()
setwd("E:/R-code/R/9.7")
setwd("E:/R-code/R/9.7")
